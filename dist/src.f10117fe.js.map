{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";;;;;;AAOO,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAC3B,MAAc,EACd,IAAY,EACZ,WAA8B,EAAA;EAE9B;EACA,IAAM,aAAa,GAAG,OAAO,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,aAAa;EAEvF,IAAI,MAAM,KAAK,GAAG,IAAI,aAAa,EAAE;IACjC,QAAQ,IAAI,CAAC,WAAW,CAAA,CAAE;MACtB,KAAK,GAAG;MACR,KAAK,OAAO;QACR,OAAO;UAAE,MAAM,EAAE;QAAM,CAAE;MAC7B,KAAK,GAAG;MACR,KAAK,KAAK;QACN,OAAO;UAAE,IAAI,EAAE;QAAM,CAAE;MAC3B,KAAK,GAAG;MACR,KAAK,MAAM;QACP,OAAO;UAAE,KAAK,EAAE;QAAM,CAAE;MAC5B,KAAK,GAAG;MACR,KAAK,MAAM;QACP,OAAO;UAAE,KAAK,EAAE;QAAM,CAAE;MAC5B;QACI,OAAO,qBAAA,GAAsB,IAAM;;;EAI/C,IAAI,MAAM,KAAK,GAAG,EAAE;IAChB,OAAO,sDAAA,GAAuD,IAAM;;EAGxE;EACA,QAAQ,IAAI,CAAC,WAAW,CAAA,CAAE;IACtB,KAAK,GAAG;IACR,KAAK,OAAO;MACR,OAAO;QAAE,MAAM,EAAE;MAAM,CAAE;IAC7B,KAAK,GAAG;IACR,KAAK,KAAK;MACN,OAAO;QAAE,IAAI,EAAE;MAAM,CAAE;IAC3B,KAAK,GAAG;IACR,KAAK,MAAM;MACP,OAAO;QAAE,KAAK,EAAE;MAAM,CAAE;IAC5B,KAAK,GAAG;IACR,KAAK,MAAM;MACP,OAAO;QAAE,KAAK,EAAE;MAAM,CAAE;IAC5B;MACI,OAAO,qBAAA,GAAsB,IAAM;;AAE/C,CAAC;AAhDY,OAAA,CAAA,kBAAkB,GAAA,kBAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export type PositiveTemporal =\n    | { days: string }\n    | { weeks: string }\n    | { months: string }\n    | { years: string }\n    | { hours: string }\n    | { minutes: string };\nexport const toPositiveTemporal = (\n    amount: string,\n    unit: string,\n    nonNegative?: boolean | string\n): PositiveTemporal | string => {\n    // Function implementation...\n    const isNonNegative = typeof nonNegative === 'boolean' || nonNegative === 'nonNegative';\n\n    if (amount === '0' && isNonNegative) {\n        switch (unit.toLowerCase()) {\n            case 'm':\n            case 'month':\n                return { months: amount };\n            case 'd':\n            case 'day':\n                return { days: amount };\n            case 'w':\n            case 'week':\n                return { weeks: amount };\n            case 'y':\n            case 'year':\n                return { years: amount };\n            default:\n                return `Invalid time unit: ${unit}`;\n        }\n    }\n\n    if (amount === '0') {\n        return `amount zero in toPositiveTemporal is invalid, unit: ${unit}`;\n    }\n\n    // Logic for handling non-zero amounts\n    switch (unit.toLowerCase()) {\n        case 'm':\n        case 'month':\n            return { months: amount };\n        case 'd':\n        case 'day':\n            return { days: amount };\n        case 'w':\n        case 'week':\n            return { weeks: amount };\n        case 'y':\n        case 'year':\n            return { years: amount };\n        default:\n            return `Invalid time unit: ${unit}`;\n    }\n};"]}